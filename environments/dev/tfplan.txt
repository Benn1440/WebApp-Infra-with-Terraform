
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # module.compute.google_compute_autoscaler.web_autoscaler[0m will be created
[0m  [32m+[0m[0m resource "google_compute_autoscaler" "web_autoscaler" {
      [32m+[0m[0m creation_timestamp = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m name               = "dev-web-autoscaler"
      [32m+[0m[0m project            = "ambient-tuner-469208-e2"
      [32m+[0m[0m self_link          = (known after apply)
      [32m+[0m[0m target             = (known after apply)
      [32m+[0m[0m zone               = "us-central1-a"

      [32m+[0m[0m autoscaling_policy {
          [32m+[0m[0m cooldown_period = 60
          [32m+[0m[0m max_replicas    = 5
          [32m+[0m[0m min_replicas    = 2
          [32m+[0m[0m mode            = "ON"

          [32m+[0m[0m cpu_utilization {
              [32m+[0m[0m predictive_method = "NONE"
              [32m+[0m[0m target            = 0.8
            }
        }
    }

[1m  # module.compute.google_compute_backend_service.web_backend[0m will be created
[0m  [32m+[0m[0m resource "google_compute_backend_service" "web_backend" {
      [32m+[0m[0m connection_draining_timeout_sec = 300
      [32m+[0m[0m creation_timestamp              = (known after apply)
      [32m+[0m[0m enable_cdn                      = false
      [32m+[0m[0m fingerprint                     = (known after apply)
      [32m+[0m[0m generated_id                    = (known after apply)
      [32m+[0m[0m health_checks                   = (known after apply)
      [32m+[0m[0m id                              = (known after apply)
      [32m+[0m[0m load_balancing_scheme           = "EXTERNAL"
      [32m+[0m[0m name                            = "dev-web-backend"
      [32m+[0m[0m port_name                       = "http"
      [32m+[0m[0m project                         = "ambient-tuner-469208-e2"
      [32m+[0m[0m protocol                        = "HTTP"
      [32m+[0m[0m self_link                       = (known after apply)
      [32m+[0m[0m session_affinity                = (known after apply)
      [32m+[0m[0m timeout_sec                     = 10

      [32m+[0m[0m backend {
          [32m+[0m[0m balancing_mode               = "UTILIZATION"
          [32m+[0m[0m capacity_scaler              = 1
          [32m+[0m[0m group                        = (known after apply)
          [32m+[0m[0m max_connections              = (known after apply)
          [32m+[0m[0m max_connections_per_endpoint = (known after apply)
          [32m+[0m[0m max_connections_per_instance = (known after apply)
          [32m+[0m[0m max_rate                     = (known after apply)
          [32m+[0m[0m max_rate_per_endpoint        = (known after apply)
          [32m+[0m[0m max_rate_per_instance        = (known after apply)
          [32m+[0m[0m max_utilization              = (known after apply)
        }
    }

[1m  # module.compute.google_compute_global_forwarding_rule.web_forwarding_rule[0m will be created
[0m  [32m+[0m[0m resource "google_compute_global_forwarding_rule" "web_forwarding_rule" {
      [32m+[0m[0m base_forwarding_rule  = (known after apply)
      [32m+[0m[0m effective_labels      = (known after apply)
      [32m+[0m[0m forwarding_rule_id    = (known after apply)
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m ip_address            = (known after apply)
      [32m+[0m[0m ip_protocol           = "TCP"
      [32m+[0m[0m label_fingerprint     = (known after apply)
      [32m+[0m[0m load_balancing_scheme = "EXTERNAL"
      [32m+[0m[0m name                  = "dev-web-forwarding-rule"
      [32m+[0m[0m network               = (known after apply)
      [32m+[0m[0m network_tier          = (known after apply)
      [32m+[0m[0m port_range            = "80"
      [32m+[0m[0m project               = "ambient-tuner-469208-e2"
      [32m+[0m[0m psc_connection_id     = (known after apply)
      [32m+[0m[0m psc_connection_status = (known after apply)
      [32m+[0m[0m self_link             = (known after apply)
      [32m+[0m[0m subnetwork            = (known after apply)
      [32m+[0m[0m target                = (known after apply)
      [32m+[0m[0m terraform_labels      = (known after apply)
    }

[1m  # module.compute.google_compute_health_check.http_health_check[0m will be created
[0m  [32m+[0m[0m resource "google_compute_health_check" "http_health_check" {
      [32m+[0m[0m check_interval_sec  = 5
      [32m+[0m[0m creation_timestamp  = (known after apply)
      [32m+[0m[0m healthy_threshold   = 2
      [32m+[0m[0m id                  = (known after apply)
      [32m+[0m[0m name                = "dev-http-health-check"
      [32m+[0m[0m project             = "ambient-tuner-469208-e2"
      [32m+[0m[0m self_link           = (known after apply)
      [32m+[0m[0m timeout_sec         = 5
      [32m+[0m[0m type                = (known after apply)
      [32m+[0m[0m unhealthy_threshold = 3

      [32m+[0m[0m http_health_check {
          [32m+[0m[0m port         = 80
          [32m+[0m[0m proxy_header = "NONE"
          [32m+[0m[0m request_path = "/"
        }
    }

[1m  # module.compute.google_compute_instance_group_manager.web_mig[0m will be created
[0m  [32m+[0m[0m resource "google_compute_instance_group_manager" "web_mig" {
      [32m+[0m[0m base_instance_name             = "dev-web"
      [32m+[0m[0m creation_timestamp             = (known after apply)
      [32m+[0m[0m fingerprint                    = (known after apply)
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m instance_group                 = (known after apply)
      [32m+[0m[0m instance_group_manager_id      = (known after apply)
      [32m+[0m[0m list_managed_instances_results = "PAGELESS"
      [32m+[0m[0m name                           = "dev-web-mig"
      [32m+[0m[0m operation                      = (known after apply)
      [32m+[0m[0m project                        = "ambient-tuner-469208-e2"
      [32m+[0m[0m self_link                      = (known after apply)
      [32m+[0m[0m status                         = (known after apply)
      [32m+[0m[0m target_size                    = 2
      [32m+[0m[0m target_stopped_size            = (known after apply)
      [32m+[0m[0m target_suspended_size          = (known after apply)
      [32m+[0m[0m wait_for_instances             = false
      [32m+[0m[0m wait_for_instances_status      = "STABLE"
      [32m+[0m[0m zone                           = "us-central1-a"

      [32m+[0m[0m auto_healing_policies {
          [32m+[0m[0m health_check      = (known after apply)
          [32m+[0m[0m initial_delay_sec = 300
        }

      [32m+[0m[0m version {
          [32m+[0m[0m instance_template = (known after apply)
        }
    }

[1m  # module.compute.google_compute_instance_template.web_template[0m will be created
[0m  [32m+[0m[0m resource "google_compute_instance_template" "web_template" {
      [32m+[0m[0m can_ip_forward          = false
      [32m+[0m[0m creation_timestamp      = (known after apply)
      [32m+[0m[0m description             = "Instance template for dev web servers"
      [32m+[0m[0m effective_labels        = {
          [32m+[0m[0m "goog-terraform-provisioned" = "true"
        }
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m machine_type            = "e2-small"
      [32m+[0m[0m metadata_fingerprint    = (known after apply)
      [32m+[0m[0m metadata_startup_script = <<-EOT
            #!/bin/bash
            apt-get update
            apt-get install -y nginx
            systemctl start nginx
            # Example: Set a homepage that shows the hostname
            echo "<html><body><h1>Hello from dev! Host: $(hostname)</h1></body></html>" > /var/www/html/index.html
        EOT
      [32m+[0m[0m name                    = (known after apply)
      [32m+[0m[0m name_prefix             = "dev-web-template-"
      [32m+[0m[0m numeric_id              = (known after apply)
      [32m+[0m[0m project                 = "ambient-tuner-469208-e2"
      [32m+[0m[0m region                  = "us-central1"
      [32m+[0m[0m self_link               = (known after apply)
      [32m+[0m[0m self_link_unique        = (known after apply)
      [32m+[0m[0m tags                    = [
          [32m+[0m[0m "http-server",
        ]
      [32m+[0m[0m tags_fingerprint        = (known after apply)
      [32m+[0m[0m terraform_labels        = {
          [32m+[0m[0m "goog-terraform-provisioned" = "true"
        }

      [32m+[0m[0m disk {
          [32m+[0m[0m architecture           = (known after apply)
          [32m+[0m[0m auto_delete            = true
          [32m+[0m[0m boot                   = true
          [32m+[0m[0m device_name            = (known after apply)
          [32m+[0m[0m disk_size_gb           = (known after apply)
          [32m+[0m[0m disk_type              = (known after apply)
          [32m+[0m[0m interface              = (known after apply)
          [32m+[0m[0m mode                   = (known after apply)
          [32m+[0m[0m provisioned_iops       = (known after apply)
          [32m+[0m[0m provisioned_throughput = (known after apply)
          [32m+[0m[0m source_image           = "debian-cloud/debian-11"
          [32m+[0m[0m type                   = (known after apply)
        }

      [32m+[0m[0m network_interface {
          [32m+[0m[0m internal_ipv6_prefix_length = (known after apply)
          [32m+[0m[0m ipv6_access_type            = (known after apply)
          [32m+[0m[0m ipv6_address                = (known after apply)
          [32m+[0m[0m name                        = (known after apply)
          [32m+[0m[0m network                     = "dev-vpc"
          [32m+[0m[0m stack_type                  = (known after apply)
          [32m+[0m[0m subnetwork                  = (known after apply)
          [32m+[0m[0m subnetwork_project          = (known after apply)
        }

      [32m+[0m[0m service_account {
          [32m+[0m[0m email  = "dev-instance-sa@ambient-tuner-469208-e2.iam.gserviceaccount.com"
          [32m+[0m[0m scopes = [
              [32m+[0m[0m "https://www.googleapis.com/auth/cloud-platform",
            ]
        }
    }

[1m  # module.compute.google_compute_target_http_proxy.web_http_proxy[0m will be created
[0m  [32m+[0m[0m resource "google_compute_target_http_proxy" "web_http_proxy" {
      [32m+[0m[0m creation_timestamp = (known after apply)
      [32m+[0m[0m fingerprint        = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m name               = "dev-web-http-proxy"
      [32m+[0m[0m project            = "ambient-tuner-469208-e2"
      [32m+[0m[0m proxy_bind         = (known after apply)
      [32m+[0m[0m proxy_id           = (known after apply)
      [32m+[0m[0m self_link          = (known after apply)
      [32m+[0m[0m url_map            = (known after apply)
    }

[1m  # module.compute.google_compute_url_map.web_url_map[0m will be created
[0m  [32m+[0m[0m resource "google_compute_url_map" "web_url_map" {
      [32m+[0m[0m creation_timestamp = (known after apply)
      [32m+[0m[0m default_service    = (known after apply)
      [32m+[0m[0m fingerprint        = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m map_id             = (known after apply)
      [32m+[0m[0m name               = "dev-web-url-map"
      [32m+[0m[0m project            = "ambient-tuner-469208-e2"
      [32m+[0m[0m self_link          = (known after apply)
    }

[1m  # module.compute.google_service_account.instance_sa[0m will be created
[0m  [32m+[0m[0m resource "google_service_account" "instance_sa" {
      [32m+[0m[0m account_id   = "dev-instance-sa"
      [32m+[0m[0m disabled     = false
      [32m+[0m[0m display_name = "Service Account for dev Compute Instances"
      [32m+[0m[0m email        = "dev-instance-sa@ambient-tuner-469208-e2.iam.gserviceaccount.com"
      [32m+[0m[0m id           = (known after apply)
      [32m+[0m[0m member       = "serviceAccount:dev-instance-sa@ambient-tuner-469208-e2.iam.gserviceaccount.com"
      [32m+[0m[0m name         = (known after apply)
      [32m+[0m[0m project      = "ambient-tuner-469208-e2"
      [32m+[0m[0m unique_id    = (known after apply)
    }

[1m  # module.database.google_compute_global_address.private_ip_address[0m will be created
[0m  [32m+[0m[0m resource "google_compute_global_address" "private_ip_address" {
      [32m+[0m[0m address            = (known after apply)
      [32m+[0m[0m address_type       = "INTERNAL"
      [32m+[0m[0m creation_timestamp = (known after apply)
      [32m+[0m[0m effective_labels   = {
          [32m+[0m[0m "goog-terraform-provisioned" = "true"
        }
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m label_fingerprint  = (known after apply)
      [32m+[0m[0m name               = "dev-private-ip-range"
      [32m+[0m[0m network            = (known after apply)
      [32m+[0m[0m prefix_length      = 16
      [32m+[0m[0m project            = "ambient-tuner-469208-e2"
      [32m+[0m[0m purpose            = "VPC_PEERING"
      [32m+[0m[0m self_link          = (known after apply)
      [32m+[0m[0m terraform_labels   = {
          [32m+[0m[0m "goog-terraform-provisioned" = "true"
        }
    }

[1m  # module.database.google_service_networking_connection.private_vpc_connection[0m will be created
[0m  [32m+[0m[0m resource "google_service_networking_connection" "private_vpc_connection" {
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m network                 = (known after apply)
      [32m+[0m[0m peering                 = (known after apply)
      [32m+[0m[0m reserved_peering_ranges = [
          [32m+[0m[0m "dev-private-ip-range",
        ]
      [32m+[0m[0m service                 = "servicenetworking.googleapis.com"
    }

[1m  # module.database.google_sql_database.webapp[0m will be created
[0m  [32m+[0m[0m resource "google_sql_database" "webapp" {
      [32m+[0m[0m charset         = (known after apply)
      [32m+[0m[0m collation       = (known after apply)
      [32m+[0m[0m deletion_policy = "DELETE"
      [32m+[0m[0m id              = (known after apply)
      [32m+[0m[0m instance        = "dev-mysql-instance"
      [32m+[0m[0m name            = "webapp_dev"
      [32m+[0m[0m project         = "ambient-tuner-469208-e2"
      [32m+[0m[0m self_link       = (known after apply)
    }

[1m  # module.database.google_sql_database_instance.main[0m will be created
[0m  [32m+[0m[0m resource "google_sql_database_instance" "main" {
      [32m+[0m[0m available_maintenance_versions = (known after apply)
      [32m+[0m[0m connection_name                = (known after apply)
      [32m+[0m[0m database_version               = "MYSQL_8_0"
      [32m+[0m[0m deletion_protection            = false
      [32m+[0m[0m dns_name                       = (known after apply)
      [32m+[0m[0m dns_names                      = (known after apply)
      [32m+[0m[0m encryption_key_name            = (known after apply)
      [32m+[0m[0m first_ip_address               = (known after apply)
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m instance_type                  = (known after apply)
      [32m+[0m[0m ip_address                     = (known after apply)
      [32m+[0m[0m maintenance_version            = (known after apply)
      [32m+[0m[0m master_instance_name           = (known after apply)
      [32m+[0m[0m name                           = "dev-mysql-instance"
      [32m+[0m[0m node_count                     = (known after apply)
      [32m+[0m[0m private_ip_address             = (known after apply)
      [32m+[0m[0m project                        = "ambient-tuner-469208-e2"
      [32m+[0m[0m psc_service_attachment_link    = (known after apply)
      [32m+[0m[0m public_ip_address              = (known after apply)
      [32m+[0m[0m region                         = "us-central1"
      [32m+[0m[0m replica_names                  = (known after apply)
      [32m+[0m[0m self_link                      = (known after apply)
      [32m+[0m[0m server_ca_cert                 = (sensitive value)
      [32m+[0m[0m service_account_email_address  = (known after apply)

      [32m+[0m[0m settings {
          [32m+[0m[0m activation_policy           = "ALWAYS"
          [32m+[0m[0m availability_type           = "ZONAL"
          [32m+[0m[0m connector_enforcement       = (known after apply)
          [32m+[0m[0m disk_autoresize             = true
          [32m+[0m[0m disk_autoresize_limit       = 0
          [32m+[0m[0m disk_size                   = (known after apply)
          [32m+[0m[0m disk_type                   = (known after apply)
          [32m+[0m[0m edition                     = (known after apply)
          [32m+[0m[0m effective_availability_type = (known after apply)
          [32m+[0m[0m pricing_plan                = "PER_USE"
          [32m+[0m[0m tier                        = "db-f1-micro"
          [32m+[0m[0m user_labels                 = (known after apply)
          [32m+[0m[0m version                     = (known after apply)

          [32m+[0m[0m backup_configuration {
              [32m+[0m[0m enabled                        = true
              [32m+[0m[0m start_time                     = (known after apply)
              [32m+[0m[0m transaction_log_retention_days = (known after apply)
            }

          [32m+[0m[0m ip_configuration {
              [32m+[0m[0m ipv4_enabled    = false
              [32m+[0m[0m private_network = (known after apply)
              [32m+[0m[0m server_ca_mode  = (known after apply)
              [32m+[0m[0m ssl_mode        = (known after apply)
            }

          [32m+[0m[0m maintenance_window {
              [32m+[0m[0m day  = 7
              [32m+[0m[0m hour = 3
            }
        }
    }

[1m  # module.database.google_sql_user.webapp_user[0m will be created
[0m  [32m+[0m[0m resource "google_sql_user" "webapp_user" {
      [32m+[0m[0m host                    = (known after apply)
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m instance                = "dev-mysql-instance"
      [32m+[0m[0m name                    = "webapp_user"
      [32m+[0m[0m password                = (sensitive value)
      [32m+[0m[0m project                 = "ambient-tuner-469208-e2"
      [32m+[0m[0m sql_server_user_details = (known after apply)
    }

[1m  # module.networking.google_compute_firewall.allow_internal[0m will be created
[0m  [32m+[0m[0m resource "google_compute_firewall" "allow_internal" {
      [32m+[0m[0m creation_timestamp = (known after apply)
      [32m+[0m[0m destination_ranges = (known after apply)
      [32m+[0m[0m direction          = (known after apply)
      [32m+[0m[0m enable_logging     = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m name               = "dev-allow-internal"
      [32m+[0m[0m network            = "dev-vpc"
      [32m+[0m[0m priority           = 1000
      [32m+[0m[0m project            = "ambient-tuner-469208-e2"
      [32m+[0m[0m self_link          = (known after apply)
      [32m+[0m[0m source_ranges      = [
          [32m+[0m[0m "10.1.0.0/16",
        ]

      [32m+[0m[0m allow {
          [32m+[0m[0m ports    = [
              [32m+[0m[0m "0-65535",
            ]
          [32m+[0m[0m protocol = "tcp"
        }
      [32m+[0m[0m allow {
          [32m+[0m[0m ports    = [
              [32m+[0m[0m "0-65535",
            ]
          [32m+[0m[0m protocol = "udp"
        }
      [32m+[0m[0m allow {
          [32m+[0m[0m ports    = []
          [32m+[0m[0m protocol = "icmp"
        }
    }

[1m  # module.networking.google_compute_firewall.allow_lb_health_check[0m will be created
[0m  [32m+[0m[0m resource "google_compute_firewall" "allow_lb_health_check" {
      [32m+[0m[0m creation_timestamp = (known after apply)
      [32m+[0m[0m destination_ranges = (known after apply)
      [32m+[0m[0m direction          = (known after apply)
      [32m+[0m[0m enable_logging     = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m name               = "dev-allow-lb-health-check"
      [32m+[0m[0m network            = "dev-vpc"
      [32m+[0m[0m priority           = 1000
      [32m+[0m[0m project            = "ambient-tuner-469208-e2"
      [32m+[0m[0m self_link          = (known after apply)
      [32m+[0m[0m source_ranges      = [
          [32m+[0m[0m "130.211.0.0/22",
          [32m+[0m[0m "35.191.0.0/16",
        ]
      [32m+[0m[0m target_tags        = [
          [32m+[0m[0m "http-server",
        ]

      [32m+[0m[0m allow {
          [32m+[0m[0m ports    = []
          [32m+[0m[0m protocol = "tcp"
        }
    }

[1m  # module.networking.google_compute_firewall.allow_web[0m will be created
[0m  [32m+[0m[0m resource "google_compute_firewall" "allow_web" {
      [32m+[0m[0m creation_timestamp = (known after apply)
      [32m+[0m[0m destination_ranges = (known after apply)
      [32m+[0m[0m direction          = (known after apply)
      [32m+[0m[0m enable_logging     = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m name               = "dev-allow-web"
      [32m+[0m[0m network            = "dev-vpc"
      [32m+[0m[0m priority           = 1000
      [32m+[0m[0m project            = "ambient-tuner-469208-e2"
      [32m+[0m[0m self_link          = (known after apply)
      [32m+[0m[0m source_ranges      = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m target_tags        = [
          [32m+[0m[0m "http-server",
        ]

      [32m+[0m[0m allow {
          [32m+[0m[0m ports    = [
              [32m+[0m[0m "80",
              [32m+[0m[0m "443",
              [32m+[0m[0m "22",
            ]
          [32m+[0m[0m protocol = "tcp"
        }
    }

[1m  # module.networking.google_compute_network.vpc[0m will be created
[0m  [32m+[0m[0m resource "google_compute_network" "vpc" {
      [32m+[0m[0m auto_create_subnetworks                   = false
      [32m+[0m[0m bgp_always_compare_med                    = (known after apply)
      [32m+[0m[0m bgp_best_path_selection_mode              = (known after apply)
      [32m+[0m[0m bgp_inter_region_cost                     = (known after apply)
      [32m+[0m[0m delete_default_routes_on_create           = false
      [32m+[0m[0m gateway_ipv4                              = (known after apply)
      [32m+[0m[0m id                                        = (known after apply)
      [32m+[0m[0m internal_ipv6_range                       = (known after apply)
      [32m+[0m[0m mtu                                       = (known after apply)
      [32m+[0m[0m name                                      = "dev-vpc"
      [32m+[0m[0m network_firewall_policy_enforcement_order = "AFTER_CLASSIC_FIREWALL"
      [32m+[0m[0m network_id                                = (known after apply)
      [32m+[0m[0m numeric_id                                = (known after apply)
      [32m+[0m[0m project                                   = "ambient-tuner-469208-e2"
      [32m+[0m[0m routing_mode                              = (known after apply)
      [32m+[0m[0m self_link                                 = (known after apply)
    }

[1m  # module.networking.google_compute_router.router[0m will be created
[0m  [32m+[0m[0m resource "google_compute_router" "router" {
      [32m+[0m[0m creation_timestamp = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m name               = "dev-router"
      [32m+[0m[0m network            = (known after apply)
      [32m+[0m[0m project            = "ambient-tuner-469208-e2"
      [32m+[0m[0m region             = "us-central1"
      [32m+[0m[0m self_link          = (known after apply)
    }

[1m  # module.networking.google_compute_router_nat.nat[0m will be created
[0m  [32m+[0m[0m resource "google_compute_router_nat" "nat" {
      [32m+[0m[0m auto_network_tier                   = (known after apply)
      [32m+[0m[0m drain_nat_ips                       = (known after apply)
      [32m+[0m[0m enable_dynamic_port_allocation      = (known after apply)
      [32m+[0m[0m enable_endpoint_independent_mapping = (known after apply)
      [32m+[0m[0m endpoint_types                      = (known after apply)
      [32m+[0m[0m icmp_idle_timeout_sec               = 30
      [32m+[0m[0m id                                  = (known after apply)
      [32m+[0m[0m min_ports_per_vm                    = (known after apply)
      [32m+[0m[0m name                                = "dev-nat"
      [32m+[0m[0m nat_ip_allocate_option              = "AUTO_ONLY"
      [32m+[0m[0m nat_ips                             = (known after apply)
      [32m+[0m[0m project                             = "ambient-tuner-469208-e2"
      [32m+[0m[0m region                              = "us-central1"
      [32m+[0m[0m router                              = "dev-router"
      [32m+[0m[0m source_subnetwork_ip_ranges_to_nat  = "LIST_OF_SUBNETWORKS"
      [32m+[0m[0m tcp_established_idle_timeout_sec    = 1200
      [32m+[0m[0m tcp_time_wait_timeout_sec           = 120
      [32m+[0m[0m tcp_transitory_idle_timeout_sec     = 30
      [32m+[0m[0m type                                = "PUBLIC"
      [32m+[0m[0m udp_idle_timeout_sec                = 30

      [32m+[0m[0m subnetwork {
          [32m+[0m[0m name                     = (known after apply)
          [32m+[0m[0m secondary_ip_range_names = []
          [32m+[0m[0m source_ip_ranges_to_nat  = [
              [32m+[0m[0m "ALL_IP_RANGES",
            ]
        }
      [32m+[0m[0m subnetwork {
          [32m+[0m[0m name                     = (known after apply)
          [32m+[0m[0m secondary_ip_range_names = []
          [32m+[0m[0m source_ip_ranges_to_nat  = [
              [32m+[0m[0m "ALL_IP_RANGES",
            ]
        }
    }

[1m  # module.networking.google_compute_subnetwork.private_subnet[0][0m will be created
[0m  [32m+[0m[0m resource "google_compute_subnetwork" "private_subnet" {
      [32m+[0m[0m creation_timestamp         = (known after apply)
      [32m+[0m[0m enable_flow_logs           = (known after apply)
      [32m+[0m[0m external_ipv6_prefix       = (known after apply)
      [32m+[0m[0m fingerprint                = (known after apply)
      [32m+[0m[0m gateway_address            = (known after apply)
      [32m+[0m[0m id                         = (known after apply)
      [32m+[0m[0m internal_ipv6_prefix       = (known after apply)
      [32m+[0m[0m ip_cidr_range              = "10.1.10.0/24"
      [32m+[0m[0m ipv6_cidr_range            = (known after apply)
      [32m+[0m[0m ipv6_gce_endpoint          = (known after apply)
      [32m+[0m[0m name                       = "dev-private-subnet-0"
      [32m+[0m[0m network                    = (known after apply)
      [32m+[0m[0m private_ip_google_access   = true
      [32m+[0m[0m private_ipv6_google_access = (known after apply)
      [32m+[0m[0m project                    = "ambient-tuner-469208-e2"
      [32m+[0m[0m purpose                    = (known after apply)
      [32m+[0m[0m region                     = "us-central1"
      [32m+[0m[0m self_link                  = (known after apply)
      [32m+[0m[0m stack_type                 = (known after apply)
      [32m+[0m[0m state                      = (known after apply)
      [32m+[0m[0m subnetwork_id              = (known after apply)
    }

[1m  # module.networking.google_compute_subnetwork.private_subnet[1][0m will be created
[0m  [32m+[0m[0m resource "google_compute_subnetwork" "private_subnet" {
      [32m+[0m[0m creation_timestamp         = (known after apply)
      [32m+[0m[0m enable_flow_logs           = (known after apply)
      [32m+[0m[0m external_ipv6_prefix       = (known after apply)
      [32m+[0m[0m fingerprint                = (known after apply)
      [32m+[0m[0m gateway_address            = (known after apply)
      [32m+[0m[0m id                         = (known after apply)
      [32m+[0m[0m internal_ipv6_prefix       = (known after apply)
      [32m+[0m[0m ip_cidr_range              = "10.1.11.0/24"
      [32m+[0m[0m ipv6_cidr_range            = (known after apply)
      [32m+[0m[0m ipv6_gce_endpoint          = (known after apply)
      [32m+[0m[0m name                       = "dev-private-subnet-1"
      [32m+[0m[0m network                    = (known after apply)
      [32m+[0m[0m private_ip_google_access   = true
      [32m+[0m[0m private_ipv6_google_access = (known after apply)
      [32m+[0m[0m project                    = "ambient-tuner-469208-e2"
      [32m+[0m[0m purpose                    = (known after apply)
      [32m+[0m[0m region                     = "us-central1"
      [32m+[0m[0m self_link                  = (known after apply)
      [32m+[0m[0m stack_type                 = (known after apply)
      [32m+[0m[0m state                      = (known after apply)
      [32m+[0m[0m subnetwork_id              = (known after apply)
    }

[1m  # module.networking.google_compute_subnetwork.public_subnet[0][0m will be created
[0m  [32m+[0m[0m resource "google_compute_subnetwork" "public_subnet" {
      [32m+[0m[0m creation_timestamp         = (known after apply)
      [32m+[0m[0m enable_flow_logs           = (known after apply)
      [32m+[0m[0m external_ipv6_prefix       = (known after apply)
      [32m+[0m[0m fingerprint                = (known after apply)
      [32m+[0m[0m gateway_address            = (known after apply)
      [32m+[0m[0m id                         = (known after apply)
      [32m+[0m[0m internal_ipv6_prefix       = (known after apply)
      [32m+[0m[0m ip_cidr_range              = "10.1.0.0/24"
      [32m+[0m[0m ipv6_cidr_range            = (known after apply)
      [32m+[0m[0m ipv6_gce_endpoint          = (known after apply)
      [32m+[0m[0m name                       = "dev-public-subnet-0"
      [32m+[0m[0m network                    = (known after apply)
      [32m+[0m[0m private_ip_google_access   = (known after apply)
      [32m+[0m[0m private_ipv6_google_access = (known after apply)
      [32m+[0m[0m project                    = "ambient-tuner-469208-e2"
      [32m+[0m[0m purpose                    = (known after apply)
      [32m+[0m[0m region                     = "us-central1"
      [32m+[0m[0m self_link                  = (known after apply)
      [32m+[0m[0m stack_type                 = (known after apply)
      [32m+[0m[0m state                      = (known after apply)
      [32m+[0m[0m subnetwork_id              = (known after apply)
    }

[1m  # module.networking.google_compute_subnetwork.public_subnet[1][0m will be created
[0m  [32m+[0m[0m resource "google_compute_subnetwork" "public_subnet" {
      [32m+[0m[0m creation_timestamp         = (known after apply)
      [32m+[0m[0m enable_flow_logs           = (known after apply)
      [32m+[0m[0m external_ipv6_prefix       = (known after apply)
      [32m+[0m[0m fingerprint                = (known after apply)
      [32m+[0m[0m gateway_address            = (known after apply)
      [32m+[0m[0m id                         = (known after apply)
      [32m+[0m[0m internal_ipv6_prefix       = (known after apply)
      [32m+[0m[0m ip_cidr_range              = "10.1.1.0/24"
      [32m+[0m[0m ipv6_cidr_range            = (known after apply)
      [32m+[0m[0m ipv6_gce_endpoint          = (known after apply)
      [32m+[0m[0m name                       = "dev-public-subnet-1"
      [32m+[0m[0m network                    = (known after apply)
      [32m+[0m[0m private_ip_google_access   = (known after apply)
      [32m+[0m[0m private_ipv6_google_access = (known after apply)
      [32m+[0m[0m project                    = "ambient-tuner-469208-e2"
      [32m+[0m[0m purpose                    = (known after apply)
      [32m+[0m[0m region                     = "us-central1"
      [32m+[0m[0m self_link                  = (known after apply)
      [32m+[0m[0m stack_type                 = (known after apply)
      [32m+[0m[0m state                      = (known after apply)
      [32m+[0m[0m subnetwork_id              = (known after apply)
    }

[1mPlan:[0m 24 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m db_connection_name = (known after apply)
  [32m+[0m[0m db_private_ip      = (sensitive value)
  [32m+[0m[0m load_balancer_ip   = (known after apply)
